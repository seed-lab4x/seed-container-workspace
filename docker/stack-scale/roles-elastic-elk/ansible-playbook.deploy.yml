#!/usr/bin/env -S ansible-playbook -K -i ${PWD}/ansible-inventories
# code: language=ansible
---

- name: deploy
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-elk-node' if (groups['docker-elk-node'] is defined) else 'docker' }}"
  tasks:

    - name: set vm map
      become: true
      ansible.posix.sysctl:
        name: vm.max_map_count
        value: '262144'
        state: present
      ignore_errors: true

    - name: fact workspace
      include_tasks: "{{ workspace.local }}/.seed/ansible-tasks/seed-workspace.fact.yml"

    - name: fact workpath
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-workpath.fact.yml"

    - name: deploy stack
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-docker/docker-stack.deploy.yml"
      vars:
        stack:
          files:
            - group: docker-manager
              src: "{{ playbook_dir }}/config/elasticsearch.yml"
              dest: "{{ workpath.remote.full }}/config/elasticsearch.yml"
            - group: docker-manager
              src: "{{ playbook_dir }}/config/logstash.conf"
              dest: "{{ workpath.remote.full }}/config/logstash.conf"
            - group: docker-manager
              src: "{{ playbook_dir }}/config/logstash.yml"
              dest: "{{ workpath.remote.full }}/config/logstash.yml"
            - group: docker-manager
              src: "{{ playbook_dir }}/config/kibana.yml"
              dest: "{{ workpath.remote.full }}/config/kibana.yml"
          networks:
            - group: docker-manager
              name: external_net-elk
              driver: overlay
              attachable: true
          labels:
            - group: docker-manager
              labels:
                elk-elasticsearch: 'true'
                elk-logstash: 'true'
                elk-kibana: 'true'
          envs:
            - file: external_env-elasticsearch.env
              content: |
                ES_JAVA_OPTS=-Xmx2048m -Xmx4096m
                ELASTIC_PASSWORD=elastic.123
                # Use single node discovery in order to disable production mode and avoid bootstrap checks.
                # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
                discovery.type=single-node
                # Force publishing on the 'elk' overlay.
                network.publish_host=_eth0_
            - file: external_env-logstash.env
              content: |
                LS_JAVA_OPTS=-Xmx256m -Xms256m
            - file: external_env-kibana.env
              content: ''
          composes:
            - file: docker-compose-swarm.yml
              src: "{{ playbook_dir }}/docker-compose-swarm.yml"
          share:
            once: true
          override: "{{ elk | default({},true) }}"
