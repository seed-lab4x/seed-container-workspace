version: "3.8"

volumes:
  zookeeper-data:
    name: stack_vol-zookeeper-data
  zookeeper-log:
    name: stack_vol-zookeeper-log
  zookeeper-secrets:
    name: stack_vol-zookeeper-secrets
  kafka-data:
    name: stack_vol-kafka-data
  kafka-secrets:
    name: stack_vol-kafka-secrets
  schema-registry-secrets:
    name: stack_vol-schema-registry-secrets
  kafka-connect-secrets:
    name: stack_vol-kafka-connect-secrets
  kafka-connect-jars:
    name: stack_vol-kafka-connect-jars
  control-center-data:
    name: external_vol-control-center-data
    external: true

networks:
  cp:
    name: external_net-cp
    external: true
  zookeeper:
    name: external_net-zookeeper
    external: true
  kafka:
    name: external_net-kafka
    external: true
  ksqldb:
    name: external_net-ksqldb
    external: true

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    env_file: external_env-zookeeper.env
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      # ZOOKEEPER_SERVER_ID: 1
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log
      - zookeeper-secrets:/etc/zookeeper/secrets
    ports:
      - "2181:2181"
    networks:
      - cp
      - zookeeper
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-zookeeper == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    env_file: external_env-kafka.env
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-secrets:/etc/kafka/secrets
    ports:
      - "9092:9092"
    networks:
      - cp
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-kafka == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.0
    env_file: external_env-schema-registry.env
    environment:
      # SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
    volumes:
      - schema-registry-secrets:/etc/schema-registry/secrets
    ports:
      - "8081:8081"
    networks:
      - cp
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-schema-registry == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first

  kafka-rest:
    image: confluentinc/cp-kafka-rest:7.0.0
    env_file: external_env-kafka-rest.env
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest
      # KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8082:8082"
    networks:
      - cp
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-kafka-rest == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.0.0
    env_file: external_env-kafka-connect.env
    environment:
      # healthcheck use by https://github.com/confluentinc/kafka-images/blob/aa10c6399fea4039587adf5c574fdf1ab908f2f4/kafka-connect-base/include/etc/confluent/docker/healthcheck.sh#L16
      CONNECT_REST_PORT: 8083
      # CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      # CONNECT_GROUP_ID: connect
      # CONNECT_CONFIG_STORAGE_TOPIC: _connect-config
      # CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      # CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_REST_ADVERTISED_HOST_NAME: 0.0.0.0
      # CONNECT_PLUGIN_PATH: /usr/share/java
    volumes:
      # - kafka-connect-data:/var/lib/kafka/data
      # - kafka-connect-secrets:/etc/kafka/secrets
      - kafka-connect-secrets:/etc/kafka-connect/secrets
      - kafka-connect-jars:/etc/kafka-connect/jars
    ports:
      - "8083:8083"
    networks:
      - cp
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-kafka-connect == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:7.0.0
    env_file: external_env-ksqldb-server.env
    # environment:
    #   KSQL_BOOTSTRAP_SERVERS: kafka:9092
    #   KSQL_KSQL_SERVICE_ID: confluent_standalone_1
    ports:
      - "8088:8088"
    networks:
      - cp
      - ksqldb
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-ksqldb-server == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first

  kafka-mqtt:
    image: confluentinc/cp-kafka-mqtt:7.0.0
    env_file: external_env-kafka-mqtt.env
    # environment:
    #   KAFKA_MQTT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
    #   KAFKA_MQTT_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    #   KAFKA_MQTT_TOPIC_REGEX_LIST: temperature:.*temperature, brightness:.*brightness
    ports:
      - "1883:1883"
    networks:
      - cp
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-kafka-mqtt == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.0.0
    env_file: external_env-control-center.env
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      # CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka:9092
      CONTROL_CENTER_REPLICATION_FACTOR: 1
    volumes:
      - control-center-data:/var/lib/confluent-control-center
    ports:
      - "9021:9021"
    networks:
      - cp
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-control-center == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first

  replicator:
    image: confluentinc/cp-enterprise-replicator:7.0.0
    env_file: external_env-replicator.env
    environment:
      # healthcheck use by https://github.com/confluentinc/kafka-images/blob/aa10c6399fea4039587adf5c574fdf1ab908f2f4/kafka-connect-base/include/etc/confluent/docker/healthcheck.sh#L16
      CONNECT_REST_PORT: 8083
      # CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      # CONNECT_GROUP_ID: replicator
      # CONNECT_CONFIG_STORAGE_TOPIC: _replicator-config
      # CONNECT_OFFSET_STORAGE_TOPIC: _replicator-offsets
      # CONNECT_STATUS_STORAGE_TOPIC: _replicator-status
      # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_REST_ADVERTISED_HOST_NAME: localhost
    # ports:
    #   - "8084:8083"
    networks:
      - cp
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.platform.os == linux
          - node.labels.cp-node == true
          - node.labels.cp-replicator == mix
        preferences:
          - spread: node.platform.os
      labels:
        "com.github.xiaoyao9184.docker-seed.type": "stack-mix"
        "com.github.xiaoyao9184.docker-seed.creator": "seed-container-workspace"
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 2
        window: 60s
      rollback_config:
        parallelism: 0
        delay: 0s
        failure_action: pause
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
      update_config:
        parallelism: 0
        delay: 0s
        failure_action: rollback
        monitor: 5m
        max_failure_ratio: 0
        order: stop-first
