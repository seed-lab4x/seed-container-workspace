#!/usr/bin/env -S ansible-playbook -i ${PWD}/ansible-inventories
# code: language=ansible
---

- name: update
  environment:
    PATH: "{{ ansible_env.PATH }}:{{ env_path | default('') }}"
  hosts: "{{ 'docker:&docker-prom-prometheus' if (groups['docker-prom-prometheus'] is defined) else 'docker' }}"
  tasks:

    - name: fact workspace
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-workspace.fact.yml"

    - name: fact workpath
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-workpath.fact.yml"
      vars:
        workpath:
          index: -3

    - name: select var
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-var.select.yml"
      vars:
        var:
          - name: stack
            file: "{{ playbook_dir }}/ansible-vars.yml"
            local: true
            once: true
          - name: stack
            file: "{{ inventory_dir }}/../dynamic-vars/{{ workpath.name }}/rule/ansible-vars.yml"
            template: "{{ playbook_dir }}/ansible-vars.yml.j2"
            local: true
            once: true
            matcher:
              - "{{ hostvars[inventory_hostname].prom.prometheus.auto | default(None,true) != None }}"

    - name: push files
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-files.push.yml"
      vars:
        files: "{{ prom.prometheus.scrapes.files | default(stack.files,true) }}"

    - name: init volumes
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-docker/docker-volumes.init.yml"
      vars:
        volumes: "{{ prom.prometheus.scrapes.volumes | default(stack.volumes,true) }}"

    - name: wait service
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-docker/docker-service.wait.yml"
      vars:
        service_share:
          any: true
          containers:
            any: true
        service:
          name: "{{ workpath.name }}_prometheus"
          until:
            - service_info.exists
          retries: 60
          delay: 60

    - name: exec service
      include_tasks: "{{ workspace.local }}/{{ workspace.seedpath }}/ansible-tasks/seed-docker/docker-service.exec.yml"
      vars:
        service:
          name: "{{ workpath.name }}_prometheus"
          command: "kill -SIGHUP 1"
          register: service_exec

    - name: print exec
      vars:
        docker_hostvars: "{{ hostvars | dict2items
          | selectattr('key','in',ansible_play_hosts)
          | selectattr('value.service_exec','defined') }}"
      ansible.builtin.pause:
        seconds: 1
        prompt: |
          {% for host in docker_hostvars %}

          [{{ host.key }}] => 
          exit code:{{ host.value.service_exec.rc | default('') }}
          --------------------------------------------------
          {{ host.value.service_exec.stdout | default('',true) }}
          {{ host.value.service_exec.stderr | default('',true) }}
          {% endfor %}
