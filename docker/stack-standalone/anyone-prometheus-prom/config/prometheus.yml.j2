global:
  scrape_interval:     15s # By default, scrape targets every 15 seconds.

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
    monitor: 'codelab-monitor'

rule_files:
  - /etc/prometheus/rules/*.yml

scrape_config_files:
  - /etc/prometheus/scrapes/*.yml

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # Override the global default and scrape targets from this job every 5 seconds.
    scrape_interval: 5s

    static_configs:
      - targets: ['localhost:9090']

{% if profile is contains('alertmanager') %}
# Alerting specifies settings related to the Alertmanager.
alerting:
  # alert_relabel_configs:
  #   [ - <relabel_config> ... ]
  alertmanagers:
    # List of labeled statically configured Alertmanagers.
    - static_configs:
        # The targets specified by the static config.
        - targets:
            - alertmanager:9093
{% endif %}

{% if profile is contains('mimir') %}
remote_write:
  - url: http://mimir:8080/api/v1/push
    # Add X-Scope-OrgID header so that Mimir knows what tenant the remote write data should be stored in.
    # In this case, our tenant is "default"
    headers:
      X-Scope-OrgID: default
{% endif %}
