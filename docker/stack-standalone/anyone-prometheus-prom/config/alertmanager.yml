global:
  resolve_timeout: 5m

# Files from which custom notification template definitions are read.
# The last component may use a wildcard matcher, e.g. 'templates/*.tmpl'.
templates:
  - '/etc/alertmanager/templates/*.tmpl'

# The root node of the routing tree.
route:
  receiver: 'default-receiver'

  # Zero or more child routes.
  # routes:
  #   - receiver: 'webhook-looger'
  #     # The labels by which incoming alerts are grouped together. For example,
  #     # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  #     # be batched into a single group.
  #     #
  #     # To aggregate by all possible labels use the special value '...' as the sole label name, for example:
  #     # group_by: ['...']
  #     # This effectively disables aggregation entirely, passing through all
  #     # alerts as-is. This is unlikely to be what you want, unless you have
  #     # a very low alert volume or your upstream notification system performs
  #     # its own grouping.
  #     group_by: ['...']

  #     # Whether an alert should continue matching subsequent sibling nodes.
  #     continue: false

  #     # A list of matchers that an alert has to fulfill to match the node.
  #     matchers: []

  #     # How long to initially wait to send a notification for a group
  #     # of alerts. Allows to wait for an inhibiting alert to arrive or collect
  #     # more initial alerts for the same group. (Usually ~0s to few minutes.)
  #     group_wait: 30s

  #     # How long to wait before sending a notification about new alerts that
  #     # are added to a group of alerts for which an initial notification has
  #     # already been sent. (Usually ~5m or more.)
  #     group_interval: 5m

  #     # How long to wait before sending a notification again if it has already
  #     # been sent successfully for an alert. (Usually ~3h or more).
  #     # Note that this parameter is implicitly bound by Alertmanager's
  #     # `--data.retention` configuration flag. Notifications will be resent after either
  #     # repeat_interval or the data retention period have passed, whichever
  #     # occurs first. `repeat_interval` should not be less than `group_interval`.
  #     repeat_interval: 4h
    
  #     # Times when the route should be muted. These must match the name of a
  #     # mute time interval defined in the mute_time_intervals section.
  #     # Additionally, the root node cannot have any mute times.
  #     # When a route is muted it will not send any notifications, but
  #     # otherwise acts normally (including ending the route-matching process
  #     # if the `continue` option is not set.)
  #     mute_time_intervals: []

  #     # Times when the route should be active. These must match the name of a
  #     # time interval defined in the time_intervals section. An empty value
  #     # means that the route is always active.
  #     # Additionally, the root node cannot have any active times.
  #     # The route will send notifications only when active, but otherwise
  #     # acts normally (including ending the route-matching process
  #     # if the `continue` option is not set).
  #     active_time_intervals:
  #       - onhours
  #       - offhours
  #       - holidays

# A list of notification receivers.
receivers:
  - name: 'default-receiver'
  # - name: 'webhook-looger'
  #   webhook_configs:
  #     - url: 'http://webhook-logger:6725'
  #       send_resolved: true

# A list of inhibition rules.
inhibit_rules:
  # A list of matchers that have to be fulfilled by the target
  # alerts to be muted.
  # target_matchers: []
  # A list of matchers for which one or more alerts have
  # to exist for the inhibition to take effect.
  # source_matchers: []
  # Labels that must have an equal value in the source and target
  # alert for the inhibition to take effect.
  # equal: []

# A list of time intervals for muting/activating routes.
time_intervals:
  - name: onhours
    time_intervals:
    - times:
      - start_time: 09:00
        end_time: 17:00
      weekdays: ['monday:friday']
      location: Local

  - name: offhours
    time_intervals:
    - times:
      - start_time: 17:00
        end_time: 24:00
      - start_time: 00:00
        end_time: 09:00
      weekdays: ['monday:friday']
      location: Local

  - name: holidays
    time_intervals:
    - weekdays: ['saturday', 'sunday']
      location: Local
