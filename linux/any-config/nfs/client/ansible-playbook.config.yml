#!/usr/bin/env -S ansible-playbook -K -i ${PWD}/ansible-inventories
# code: language=ansible
---

- name: config
  hosts: linux
  become: true
  tasks:

    - rescue:
      - name: rescue|fail tasks
        when:
          - hostvars[inventory_hostname].nfs.client | default(None,true) != None
        ansible.builtin.fail:
          msg: "config fail. exclude host var assert."

      block:
      - name: assert host var
        ansible.builtin.assert:
          that:
            - hostvars[inventory_hostname].nfs.client | default(None,true) != None
          msg: "host var assert fail 'nfs.client'"
          quiet: true

      - vars:
          nfs_client_mounts: "{{ nfs.client.mounts | default([],true) }}"
        block:
        - name: include vars
          when: nfs.client.vars_file is defined
          ansible.builtin.include_vars:
            file: "{{ nfs.client.vars_file }}"

        - name: mkdir mount path
          become: true
          loop: "{{ nfs_client_mounts }}"
          ansible.builtin.file:
            state: directory
            path: "{{ item.path }}"

        - name: configure nfs-client
          ansible.builtin.include_role:
            name: mrlesmithjr.nfs-client
            apply:
              become: true

      - block:
        - name: shell nfs-client status
          loop:
            - mount | grep nfs
            - netstat | grep :nfs
            - ss -a|grep :nfs
          ansible.builtin.shell:
            cmd: "{{ item }}"
          register: nfs_client_status_shell
          ignore_errors: true

        - name: print status output
          vars:
            linux_hostvars: "{{ hostvars | dict2items
              | selectattr('key','in',ansible_play_hosts)
              | selectattr('value.nfs_client_status_shell','defined') }}"
          ansible.builtin.pause:
            seconds: 1
            prompt: |
              {% for host in linux_hostvars %}

              [{{ host.key }}] =>
              {%   for item in host.value.nfs_client_status_shell.results %}
              --------------------------------------------------
              $ {{ item.item }}
              {{ item.stdout | default('',true) }}
              {{ item.stderr | default('',true) }}
              {%   endfor %}
              {% endfor %}
