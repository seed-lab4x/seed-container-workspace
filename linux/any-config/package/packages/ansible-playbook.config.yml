#!/usr/bin/env -S ansible-playbook -K -i ${PWD}/ansible-inventories
# code: language=ansible
---

- name: config
  hosts: linux
  become: true
  tasks:

    - rescue:
      - name: rescue|fail tasks
        when:
          - hostvars[inventory_hostname].package | default(None,true) != None
        ansible.builtin.fail:
          msg: "config fail. exclude host var assert."

      block:
      - name: assert host var
        ansible.builtin.assert:
          that:
            - hostvars[inventory_hostname].package | default(None,true) != None
            - hostvars[inventory_hostname].package.packages | default(None,true) != None
          msg: "host var assert fail 'package'"
          quiet: true

      - name: update apt cache
        when: ansible_pkg_mgr == "apt"
        ansible.builtin.apt:
          update_cache: yes
      
      - name: update yum cache
        when: ansible_pkg_mgr == "yum"
        ansible.builtin.yum:
          update_cache: yes
      
      - name: update apk cache
        when: ansible_pkg_mgr == "apk"
        community.general.apk:
          update_cache: yes
      
      - name: update dnf cache
        when: ansible_pkg_mgr == "dnf"
        ansible.builtin.dnf:
          update_cache: yes
      
      - name: update zypper cache
        when: ansible_pkg_mgr == "zypper"
        community.general.zypper:
          name: zypper
          update_cache: yes
      
      - name: update pacman cache
        when: ansible_pkg_mgr == "pacman"
        community.general.pacman:
          update_cache: yes
  
      - name: install package
        loop: "{{ package.packages | default([],true) }}"
        ansible.builtin.package:
          state: present
          name: "{{ item }}"
